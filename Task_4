#include <iostream>
#include <vector>
using namespace std;

struct Task {
    string description;
    bool isCompleted;
};


void addTask(vector<Task>& tasks) {
    string taskDescription;
    cout << "Enter the task description: ";
    cin.ignore();
    getline(cin, taskDescription);

    Task newTask;
    newTask.description = taskDescription;
    newTask.isCompleted = false;
    tasks.push_back(newTask);

    cout << "Task added successfully!" << endl;
}

void viewTasks(const vector<Task>& tasks) {
    if (tasks.empty()) {
        cout << "No tasks available!" << endl;
        return;
    }

    cout << "\nYour tasks are:\n";
    for (int i = 0; i < tasks.size(); i++) {
        string status = tasks[i].isCompleted ? "Complete" : "Pending";
        cout << i + 1 << ". " << tasks[i].description << " [" << status << "]" << endl;
    }
}


void markTaskCompleted(vector<Task>& tasks) {
    int taskNumber;
    cout << "Enter the task number to mark as complete: ";
    cin >> taskNumber;


    if (taskNumber < 1 || taskNumber > tasks.size()) {
        cout << "Invalid task number!" << endl;
    } else {
        tasks[taskNumber - 1].isCompleted = true;
        cout << "Task " << taskNumber << " marked as complete!" << endl;
    }
}

void removeTask(vector<Task>& tasks) {
    int taskNumber;
    cout << "Enter the task number to remove: ";
    cin >> taskNumber;


    if (taskNumber < 1 || taskNumber > tasks.size()) {
        cout << "Invalid task number!" << endl;
    } else {
        tasks.erase(tasks.begin() + taskNumber - 1);
        cout << "Task " << taskNumber << " removed!" << endl;
    }
}


int main() {
    vector<Task> tasks;
    int choice;

    while (true) {
      
        cout << "\nTo-Do List Manager\n";
        cout << "1. Add Task\n";
        cout << "2. View Tasks\n";
        cout << "3. Mark Task as Completed\n";
        cout << "4. Remove Task\n";
        cout << "5. Exit\n";
        cout << "Choose an option (1-5): ";
        cin >> choice;

        switch (choice) {
            case 1:
                addTask(tasks);
                break;
            case 2:
                viewTasks(tasks); 
                break;
            case 3:
                markTaskCompleted(tasks);
                break;
            case 4:
                removeTask(tasks);
                break;
            case 5:
                cout << "Exiting the To-Do List Manager.\n";
                return 0;
            default:
                cout << "Invalid choice! Please choose a valid option (1-5).\n";
        }
    }

    return 0;
}
